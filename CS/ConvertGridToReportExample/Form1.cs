using DevExpress.XtraBars.Ribbon;
using DevExpress.XtraGrid.Columns;
using DevExpress.XtraReports.ReportGeneration;
using DevExpress.XtraReports.UI;
using System.Data;

namespace ConvertGridToReportExample
{
    public partial class Form1 : RibbonForm
    {
        public Form1()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void btnShowPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            XtraReport1 report = CreateReportFromGrid();
            ReportPrintTool printTool = new ReportPrintTool(report);
            printTool.ShowPreviewDialog(this.GetActiveLookAndFeel());
        }

        private void btnShowReportDesigner_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            XtraReport1 report = CreateReportFromGrid();
            ReportDesignTool designTool = new ReportDesignTool(report);
            designTool.ShowDesignerDialog(this.GetActiveLookAndFeel());
        }

        private XtraReport1 CreateReportFromGrid()
        {
            object dSource;
            string dMember;
            if (chkOnlyExpRecords.Checked)
            {
                dSource = FillDatasetFromGrid();
                dMember = null;
            }
            else
            {
                dSource = sqlDataSource1;
                dMember = sqlDataSource1.Queries[0].Name;
            }
            XtraReport1 report = new XtraReport1(dSource, dMember, gridView);
            return report;
        }

        private DataTable FillDatasetFromGrid()
        {
            int rowHandle;
            DataTable dTable = new DataTable();
            foreach (GridColumn c in gridView.Columns)
                dTable.Columns.Add(c.FieldName, c.ColumnType);
            for (int r = 0; r < gridView.RowCount; r++)
            {

                rowHandle = gridView.GetVisibleRowHandle(r);
                if (!gridView.IsGroupRow(rowHandle))
                {
                    object[] rowValues = new object[dTable.Columns.Count];
                    for (int c = 0; c < dTable.Columns.Count; c++)
                        rowValues[c] = gridView.GetRowCellValue(rowHandle, dTable.Columns[c].ColumnName);
                    dTable.Rows.Add(rowValues);
                }
            }
            return dTable;
        }

        private void btnReportGeneratorPreview_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ReportGenerationOptions options = new ReportGenerationOptions() 
            { 
                PrintVerticalLines = DevExpress.Utils.DefaultBoolean.True,
                PrintHorizontalLines = DevExpress.Utils.DefaultBoolean.True
            };

            XtraReport report = ReportGenerator.GenerateReport(gridView, options);
            ReportPrintTool printTool = new ReportPrintTool(report);
            printTool.ShowPreviewDialog(this.GetActiveLookAndFeel());
        }

        private void btnReportGeneratorDesigner_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            XtraReport report = ReportGenerator.GenerateReport(gridView);
            ReportDesignTool designTool = new ReportDesignTool(report);
            designTool.ShowDesignerDialog(this.GetActiveLookAndFeel());
        }
    }
}
